# Generated by Django 5.1.4 on 2024-12-12 08:43

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventGenres",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Event Genre",
                "verbose_name_plural": "Event Genres",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="EventTypes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Event Type",
                "verbose_name_plural": "Event Types",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Interest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                ("icon", models.ImageField(upload_to="interesetIcons")),
            ],
        ),
        migrations.CreateModel(
            name="RestaurantCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Restaurant Category",
                "verbose_name_plural": "Restaurant Categories",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="RetaurantLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("symbol", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="MyUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=150, null=True, unique=True
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("user_type", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists."
                        },
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "profile_photo",
                    models.FileField(
                        blank=True,
                        default="default.png",
                        null=True,
                        upload_to="profile_pic",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("Male", "Male"), ("Female", "Female")],
                        default="Male",
                        max_length=30,
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="staff status"),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_loyal", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("birthday", models.DateField(blank=True, null=True)),
                ("slug", models.SlugField(blank=True, null=True)),
                (
                    "barcode_image",
                    models.ImageField(blank=True, null=True, upload_to="barcodes"),
                ),
                ("card_id", models.CharField(blank=True, max_length=16, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "interests",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="client",
                        to="base_user.interest",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Hotel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                ("address_az", models.CharField(blank=True, max_length=100, null=True)),
                ("address_en", models.CharField(blank=True, max_length=100, null=True)),
                ("address_tr", models.CharField(blank=True, max_length=100, null=True)),
                ("address_ru", models.CharField(blank=True, max_length=100, null=True)),
                ("address_ar", models.CharField(blank=True, max_length=100, null=True)),
                ("address_ko", models.CharField(blank=True, max_length=100, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("distance_area", models.FloatField(blank=True, null=True)),
                ("slug", models.SlugField(allow_unicode=True, blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hotel",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Museum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("name_az", models.CharField(max_length=200, null=True)),
                ("name_en", models.CharField(max_length=200, null=True)),
                ("name_tr", models.CharField(max_length=200, null=True)),
                ("name_ru", models.CharField(max_length=200, null=True)),
                ("name_ar", models.CharField(max_length=200, null=True)),
                ("name_ko", models.CharField(max_length=200, null=True)),
                ("background_image", models.ImageField(upload_to="museum")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="museum",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Museum",
                "verbose_name_plural": "Museums",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "terminal_group_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "organization_id",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                ("address_az", models.CharField(blank=True, max_length=100, null=True)),
                ("address_en", models.CharField(blank=True, max_length=100, null=True)),
                ("address_tr", models.CharField(blank=True, max_length=100, null=True)),
                ("address_ru", models.CharField(blank=True, max_length=100, null=True)),
                ("address_ar", models.CharField(blank=True, max_length=100, null=True)),
                ("address_ko", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "cover",
                    models.ImageField(
                        blank=True, null=True, upload_to="restaurant_cover"
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("distance_area", models.FloatField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("show_tip_card", models.BooleanField(default=True)),
                ("slug", models.SlugField(allow_unicode=True, blank=True, null=True)),
                (
                    "service_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("facebook", models.URLField(blank=True, null=True)),
                ("instagram", models.URLField(blank=True, null=True)),
                ("whatsapp", models.URLField(blank=True, null=True)),
                ("google", models.URLField(blank=True, null=True)),
                ("tripadvisor", models.URLField(blank=True, null=True)),
                ("tiktok", models.URLField(blank=True, null=True)),
                ("fbpixel", models.CharField(blank=True, max_length=100, null=True)),
                ("loyalty_discount_percent", models.IntegerField(default=0)),
                ("is_popular", models.BooleanField(default=False)),
                (
                    "currency",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="restaurants",
                        to="base_user.currency",
                    ),
                ),
                (
                    "hotel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurants",
                        to="base_user.hotel",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurant",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FavoriteRestaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_restaurants",
                        to="base_user.client",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorites",
                        to="base_user.restaurant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClientRelationsWRestaurants",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base_user.client",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base_user.restaurant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Client and Restaurant",
                "verbose_name_plural": "Clients and Restaurants",
            },
        ),
        migrations.CreateModel(
            name="RestaurantCampaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "cover",
                    models.ImageField(
                        blank=True, null=True, upload_to="campaign_cover"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campaigns",
                        to="base_user.restaurant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RestaurantEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("age", models.CharField(max_length=100)),
                ("entry_information", models.TextField()),
                ("description", models.TextField()),
                ("phone", models.CharField(max_length=100)),
                ("address", models.TextField()),
                ("map_url", models.TextField()),
                ("start_date", models.CharField(max_length=100)),
                (
                    "genre",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base_user.eventgenres",
                    ),
                ),
                (
                    "music_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base_user.eventtypes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Restaurant Event",
                "verbose_name_plural": "Restaurant Events",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="EventImages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="event_images"),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="base_user.restaurantevent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Image",
                "verbose_name_plural": "Event Images",
            },
        ),
        migrations.CreateModel(
            name="RestaurantPackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "cover",
                    models.ImageField(blank=True, null=True, upload_to="package_cover"),
                ),
                (
                    "features",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="packages",
                        to="base_user.feature",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="restaurant",
            name="package",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="restaurants",
                to="base_user.restaurantpackage",
            ),
        ),
        migrations.CreateModel(
            name="RestaurantReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.PositiveSmallIntegerField()),
                ("review", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="base_user.client",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="base_user.restaurant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RestaurantStory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cover",
                    models.ImageField(blank=True, null=True, upload_to="story_cover"),
                ),
                ("is_activate", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stories",
                        to="base_user.restaurant",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RestaurantSubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base_user.restaurantcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Restaurant Sub Category",
                "verbose_name_plural": "Restaurant Sub Categories",
                "ordering": ("name",),
            },
        ),
        migrations.AddField(
            model_name="restaurant",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="base_user.restaurantsubcategory",
            ),
        ),
        migrations.CreateModel(
            name="RestaurantWorkingHour",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("weekday", models.CharField(blank=True, max_length=50, null=True)),
                ("start", models.CharField(blank=True, max_length=50, null=True)),
                ("end", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workinghours",
                        to="base_user.restaurant",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="restaurant",
            name="language",
            field=models.ManyToManyField(
                blank=True,
                null=True,
                related_name="restaurants",
                to="base_user.retaurantlanguage",
            ),
        ),
        migrations.AddField(
            model_name="currency",
            name="language",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="currencies",
                to="base_user.retaurantlanguage",
            ),
        ),
        migrations.AddField(
            model_name="currency",
            name="currency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="currencies",
                to="base_user.unit",
            ),
        ),
        migrations.CreateModel(
            name="Url",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.CharField(max_length=200)),
                (
                    "package",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="urls",
                        to="base_user.restaurantpackage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Waiter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "waiter_id",
                    models.CharField(blank=True, max_length=10, null=True, unique=True),
                ),
                ("slug", models.SlugField(allow_unicode=True, blank=True, null=True)),
                ("notification_token", models.TextField(blank=True, null=True)),
                ("card_id", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "card_id_update",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_card_saved", models.BooleanField(default=False)),
                ("card_name", models.CharField(blank=True, max_length=200, null=True)),
                ("card_mask", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=6),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="waiters",
                        to="base_user.restaurant",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="waiter",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
